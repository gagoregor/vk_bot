
---

## **üíª –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥**  

### **1. –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª (`src/index.js`)**  
```javascript
const { VK } = require('vk-io');
const config = require('../config.json');
const db = require('./db/database');

const vk = new VK({
  token: config.token,
});

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
db.connect(config.mysql);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "!–∑–∞–∫–∞–∑"
vk.updates.on('message_new', async (context) => {
  if (context.text === '!–∑–∞–∫–∞–∑') {
    const [order] = await db.query(
      'INSERT INTO orders (user_id, status) VALUES (?, "pending") RETURNING id',
      [context.senderId]
    );

    await context.send(`
      üõí –í–∞—à –∑–∞–∫–∞–∑ #${order.id} –æ—Ñ–æ—Ä–º–ª–µ–Ω!
      üí≥ –û–ø–ª–∞—Ç–∏—Ç–µ: !–æ–ø–ª–∞—Ç–∞ ${order.id}
    `);
  }

  if (context.text.startsWith('!–æ–ø–ª–∞—Ç–∞')) {
    const orderId = context.text.split(' ')[1];
    await db.query('UPDATE orders SET status = "paid" WHERE id = ?', [orderId]);
    await context.send('‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!');
  }
});

vk.updates.start().catch(console.error);
